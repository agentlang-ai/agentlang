(component :Planner.Core)

(entity
 :Customer
 {:Email {:type :Email :guid true}
  :Name :String
  :Created :Now
  :Type {:oneof ["premium" "standard"]}})

(entity
 :Employee
 {:Email {:type :Email :guid true}
  :Name :String
  :Created :Now
  :Department {:oneof ["sales" "accounting"]}})

(dataflow
 :InitPlannerAgent
 {:Fractl.Inference.Service/Agent
  {:Name "planner-agent"
   :Type "planner"
   :ToolComponents [:q# [:Planner.Core]]
   :UserInstruction "You are an agent that use tools to create entity instances from text descritpions."}
  :as :Agent}
 {:Fractl.Inference.Service/AgentLLM
  {:Agent :Agent.Name :LLM "llm01"}}
 :Agent)

(dataflow
 :InitDataSummaryAgent
 {:Fractl.Inference.Service/Agent
  {:Name "data-summary-agent"
   :Type "chat"
   :CacheChatSession false}
  :as :Agent}
 {:Fractl.Inference.Service/AgentLLM
  {:Agent :Agent.Name :LLM "llm01"}}
 {:Fractl.Inference.Service/ChatSession
  {:Messages
   [:q# [{:role :system
          :content (str "You are an agent who translates a text to a data-summary. For example, if the input text is "
                        "\"A new premium customer needs to be added to the system with email joe@acme.com and name Joe J\", "
                        "your response should be - \"Customer: type - premium, email - joe@acme.com, name - Joe J\"")}]]}
  :-> [[:Fractl.Inference.Service/AgentChatSession :Agent]]}
 {:Fractl.Inference.Service/AgentDelegate
  {:From "data-summary-agent"
   :To "planner-agent"}}
 :Agent)

;; Usage:
;; POST api/Planner.Core/InvokePlanner
;; {"Planner.Core/InvokePlanner":
;;   {"UserInstruction": "Add a new employee named Mat to the sales department. His email is mat@acme.com"}}
(inference :InvokePlanner {:agent "data-summary-agent"})

(dataflow
 :Fractl.Kernel.Lang/AppInit
 {:Fractl.Inference.Provider/LLM
  {:Type "openai"
   :Name "llm01"
   :Config {:ApiKey (fractl.util/getenv "OPENAI_API_KEY")
            :EmbeddingApiEndpoint "https://api.openai.com/v1/embeddings"
            :EmbeddingModel "text-embedding-3-small"
            :CompletionApiEndpoint "https://api.openai.com/v1/chat/completions"
            :CompletionModel "gpt-3.5-turbo"}}}
 [:try {:Fractl.Inference.Service/Agent {:Name? "planner-agent"}}
  :not-found {:InitPlannerAgent {}}]
 [:try {:Fractl.Inference.Service/Agent {:Name? "data-summary-agent"}}
  :not-found {:InitDataSummaryAgent {}}])
