(ns ecommerce.cart
  (:use [fractl.lang]
        [fractl.lang.datetime]
        [fractl.lang.string]))

(component :Ecommerce.Cart)

(entity {:CartInfo
         {:Inventory {:ref     :Ecommerce.Store/Inventory.Id
                      :indexed true}
          :AddedAt   {:type    :Kernel/DateTime
                      :default now}
          :NoofItems :Kernel/Int
          :Price     :Kernel/String
          :Currency  {:type    :Kernel/String
                      :default "USD"}}})

(event {:AddCart
        {:Inventory :Kernel/UUID
         :NoofItems :Kernel/Int
         :Price     :Kernel/String}})

(dataflow :AddCart
          {:CartInfo {:Inventory                        :Ecommerce.Cart/AddToCart.Inventory
                      :NoofItems                        :Ecommerce.Cart/AddToCart.NoofItems
                      :Price                            :Ecommerce.Cart/AddToCart.Price
                      ;; Check whether product stock is >=1
                      :Ecommerce.Stock/Inventory.Stock? [:>= 1]}}
          {:CartInfo {:Inventory? :Ecommerce.Cart/AddToCart.Inventory?}})

(event {:DeleteCart
        {:Cart :Kernel/UUID}})

(dataflow :DeleteCart
          [:delete :Ecommerce.Cart/CartInfo :Ecommerce.Cart/DeleteCart.Cart])

(event {:AddProductToCart
        {:Inventory :Kernel/UUID
         :Cart      :Kernel/UUID
         :Product   :Kernel/UUID
         :Store     :Kernel/UUID
         :Price     :Kernel/String
         :NoofItems :Kernel/Int}})

(dataflow :AddProductToCart
          {:CartInfo {:Id?       :Ecommerce.Cart/AddProductToCart.Cart
                      :NoofItems '(+ :Ecommerce.Cart/CartInfo.NoofItems :Ecommerce.Cart/AddProductToCart.NoofItems)
                      :Price     '(+ :Ecommerce.Cart/CartInfo.Price :Ecommerce.Cart/AddProductToCart.Price)}})

(event {:AllCartItems {}})

(dataflow :AllCartItems
          :CartInfo?)

(record {:TotalPrice
         {:Price :Kernel/String}})

(defn total-price [cartinfos]
      (reduce + (map #(:Price %) cartinfos)))

(dataflow :TotalFromCart
          :Ecommerce.Cart/CartInfo?
          {:TotalPrice '(total-price :Ecommerce.Cart/CartInfo)})

;RBAC isn't required in Cart as, usually ecommerce sites allow to add
;carts or add items to cart but, checkout requires login.