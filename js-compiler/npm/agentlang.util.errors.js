var window=global;var $CLJS=require("./cljs_env.js");require("./cljs.core.js");require("./agentlang.util.js");
'use strict';$CLJS.sj([new $CLJS.N(null,"invalid-attribute","invalid-attribute",-1315751360),new $CLJS.N(null,"type-mismatch","type-mismatch",-1785261567),new $CLJS.N(null,"invalid-operator","invalid-operator",2119106241),new $CLJS.N(null,"no-default-value","no-default-value",2124127010),new $CLJS.N(null,"attribute-type-mismatch","attribute-type-mismatch",-1842006395),new $CLJS.N(null,"invalid-set-element","invalid-set-element",-1040030202),new $CLJS.N(null,"invalid-list-element","invalid-list-element",-905500248),
new $CLJS.N(null,"attribute-not-in-schema","attribute-not-in-schema",-1789340021),new $CLJS.N(null,"not-a-set","not-a-set",-1126323467),new $CLJS.N(null,"check-failed","check-failed",-1316157547),new $CLJS.N(null,"no-record-set","no-record-set",1510086585),new $CLJS.N(null,"schema-not-found","schema-not-found",1668943164),new $CLJS.N(null,"format-mismatch","format-mismatch",-1662618658)],[function(a,b){return[$CLJS.t.g(a)," - invalid attribute(s) found - ",$CLJS.t.g(b)].join("")},function(a,b){return["Expected type for ",
$CLJS.t.g(a)," is ",$CLJS.t.g(b)].join("")},function(a){return["Invalid condition in event pattern - ",$CLJS.t.g(a)].join("")},function(a){return["No default value defined for ",$CLJS.t.g(a)].join("")},function(a,b){return["Attribute ",$CLJS.t.g(a)," is not of type ",$CLJS.t.g(b)].join("")},function(a){return["Invalid set element for ",$CLJS.t.g(a)].join("")},function(a){return["Invalid list element for ",$CLJS.t.g(a)].join("")},function(a){return["Attribute not in schema - ",$CLJS.t.g(a)].join("")},
function(a){return["Not a set - ",$CLJS.t.g(a)].join("")},function(a,b){return["Check failed, invalid value ",$CLJS.t.g(a)," for ",$CLJS.t.g(b)].join("")},function(a){return["No record set for attribute ",$CLJS.t.g(a)].join("")},function(a){return["Schema not found for ",$CLJS.t.g(a)].join("")},function(a){return["Format mismatch - ",$CLJS.t.g(a)].join("")}]);