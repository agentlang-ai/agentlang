var window=global;var $CLJS=require("./cljs_env.js");require("./cljs.core.js");require("./cljs.reader.js");
'use strict';var Du,Fu,Gu,Hu,Iu,Ju;Du=function(a){return"string"===typeof a||a instanceof $CLJS.N&&null==$CLJS.Kd(a)};$CLJS.Eu=function(a){this.m=a};Fu=new $CLJS.y("cljs.reader","read-date","cljs.reader/read-date",1663417238,null);Gu=new $CLJS.y(null,"cljs.core.PersistentQueue.EMPTY","cljs.core.PersistentQueue.EMPTY",399917828,null);Hu=new $CLJS.y(null,"read-date","read-date",1874308181,null);Iu=new $CLJS.y("cljs.core","into","cljs.core/into",1879938733,null);
Ju=new $CLJS.y(null,"cljs.reader","cljs.reader",1327473948,null);$CLJS.Jj.j($CLJS.G([new $CLJS.n(null,4,[$CLJS.jr,function(a){if(!$CLJS.gd(a))throw Error("Queue literal expects a vector for its elements.");return new $CLJS.Ed(null,Iu,new $CLJS.Ed(null,Gu,new $CLJS.Ed(null,a,null,1,null),2,null),3,null)},$CLJS.Ih,function(a){if("string"!==typeof a)throw Error("UUID literal expects a string as its representation.");try{return new $CLJS.Tq(a.toLowerCase(),null)}catch(b){throw Error(b.message);}},$CLJS.ir,function(a){if("string"!==typeof a)throw Error("Instance literal expects a string for its timestamp.");
try{var b=new $CLJS.qc(function(){return $CLJS.er},Fu,$CLJS.sj([$CLJS.kk,$CLJS.Vh,$CLJS.X,$CLJS.ik,$CLJS.Tj,$CLJS.fk,$CLJS.Mj,$CLJS.ok,$CLJS.Sj,$CLJS.ek,$CLJS.Wh],[!0,Ju,Hu,"cljs/reader.cljs",26,1,92,92,$CLJS.Hj(new $CLJS.S(null,1,5,$CLJS.T,[$CLJS.ci],null)),null,$CLJS.q($CLJS.er)?$CLJS.er.nd:null]));return b.g?b.g(a):b.call(null,a)}catch(c){throw Error(c.message);}},$CLJS.hr,function(a){if(!$CLJS.gd(a)&&!$CLJS.ed(a))throw Error("JavaScript literal must use map or vector notation");if($CLJS.ed(a)&&
!$CLJS.pe(Du,$CLJS.hg(a)))throw Error("JavaScript literal keys must be strings or unqualified keywords");return new $CLJS.Eu(a)}],null)]));