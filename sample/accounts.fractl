(ns sample.accounts
  (:require [fractl.lang
             :refer [component attribute event
                     entity record relationship dataflow]]
            [fractl.lang.datetime :as dt]))

(component :Acme.Accounting)

(entity
 :Acme.Accounting/Account
 {:Title {:type :Kernel/String
          :indexed true
          :unique true}
  :meta
  {:str :Title
   :views
   {:input
    {:Fractl.UI/CreateEntityForm
     {:Fields [{:Title {:search-event :Acme.Accounting/QueryAccountsByTitle}}]}}
    :list
    {:Fractl.UI/Table
     {:Source :Acme.Accounting/QueryAllAccounts
      :Fields [:Title]}}
    :search
    {:Fractl.UI/SearchEntityForm
     {:Fields [:Title]
      :ResultView
      {:Fractl.UI/Table
       {:Source {:Acme.Accounting/QueryAccountsByTitle
                 {:Title :Title}}
        :Fields [:Title]}}}}}}})

(dataflow
 :Acme.Accounting/QueryAllAccounts
 {:Acme.Accounting/Account? {}})

(dataflow
 :Acme.Accounting/QueryAccountsByTitle
 {:Acme.Accounting/Account
  {:Title? [:like :Acme.Accounting/QueryAccountsByTitle.S]}})

(relationship
 :Acme.Accounting/Transaction
 {:Date {:type :Kernel/DateTime
         :default dt/now}
  :Debit {:ref :Acme.Accounting/Account.Id}
  :Credit {:ref :Acme.Accounting/Account.Id}
  :Amount :Kernel/Decimal
  :meta
  {:from :Debit
   :to :Credit
   :list {:Debit :Acme.Accounting/QueryAllAccounts
          :Credit :Acme.Accounting/QueryAllAccounts}
   :cardinality
   {:type :1-1
    :exclusive false}
   :view
   {:order [:Date :Debit :Credit :Amount]}}})
