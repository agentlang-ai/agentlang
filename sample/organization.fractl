(ns organization
  (:require [fractl.lang :refer
             [component record dataflow event entity]]
            [fractl.lang.datetime :refer [now]]))

(component :Organization)

(defn valid-city? [s]
  (some #{s} #{"New York", "Chicago", "Seattle", "San Jose"}))

(record :Address
        {:Street :Kernel/String
         :City {:check valid-city?}
         :Zip {:format "\\d{5}(-\\d{4})?"}}) ;; Zip format - NNNNN-NNNN

(entity :Department
        {:Name :Kernel/String})

(entity :Employee
        {:FirstName :Kernel/String
         :LastName :Kernel/String
         :PostalAddress :Address
         :Email {:type :Kernel/Email
                 :unique true
                 :indexed true}
         :Department {:ref :Department.__Id__
                      :indexed true}
         :Salary :Kernel/Decimal})

(event :FetchAllEmployeesInDepartment
       {:DepartmentId :Kernel/UUID})

(dataflow :FetchAllEmployeesInDepartment
          {:Employee
           {:Department? :FetchAllEmployeesInDepartment.DepartmentId}})

(dataflow :SalaryIncrement
          {:Employee
           {:Department? :SalaryIncrement.DepartmentId
            :Salary '(+ :Salary (* :Salary :SalaryIncrement.Percentage))}})
