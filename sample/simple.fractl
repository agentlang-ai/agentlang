(ns sample.simple
  (:use [fractl.lang]))

(component :Sample.Simple)

(entity {:E1 {:X :Kernel/Int}})
(entity {:E2 {:X :Kernel/Int}})

(entity {:E3 {:A :Kernel/Int
              :B :Kernel/Int
              :C :Kernel/Int
              :X {:type :Kernel/String
                  :write-only true}
              :Y :Kernel/DateTime}})

(dataflow :K
          {:E3 {:A '(+ 5 :B)
                :B 10
                :C '(+ 10 :A)
                :X "secret"
                :Y '(fractl.lang.datetime/now)}})

(entity {:E4 {:Y :Kernel/DateTime}})

(dataflow :KK {:E4 {:Y '(fractl.lang.datetime/now)}})

(dataflow
 :RBACPolicy
 {:Kernel/Policy
  {:Intercept "RBAC"
   :Resource ["Sample.Simple/Upsert_E4"]
   :Rule [:q#
          [:when
           [:= "life" :EventContext.Auth.Owner.Group]]]}})

(dataflow
 :LoggingPolicy
 {:Kernel/Policy
  {:Intercept "Logging"
   :Resource ["Sample.Simple/Upsert_E1"]
   :Rule [:q#
          {:Disable :INFO}]}})
